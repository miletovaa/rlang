---
title: "Plots"
format: 
  html:
    embed-resources: true
    toc: true
    toc-location: left
editor: visual
execute:
  warning: false
  message: false
  echo: true
  error: true
---

```{r}
library(tidyverse)

# data()
# BOD
# View(CO2)
```

# 1. INTRODUCTION

<https://youtu.be/HPJn1CMvtmI?si=Za_zGT-gCu8MH19J>

```{r}
ggplot(data = BOD,
       mapping = aes(x = Time,
                     y = demand))+
  geom_point(size = 5)+
  geom_line(colour = "red")

# EQUALS TO 

BOD %>% 
  ggplot(aes(Time, demand)) +
  geom_point(size = 5) +
  geom_line(color = "red")

CO2 %>%
  ggplot(aes(conc, uptake, 
             colour = Treatment)) +
  geom_point(size = 3, alpha = 0.5) +
  geom_smooth(method = lm, se = F) +
  facet_wrap(~Type)+
  labs(title = "Concentration of CO2")+
  theme_bw()

CO2 %>% 
  ggplot(aes(Treatment, uptake))+
  geom_boxplot() +
  geom_point(alpha = 0.5,
             aes(size = conc,
                 colour = Plant))+
  facet_wrap(~Type) +
  #coord_flip() +
  theme_minimal()+
  labs(title = "Chilled vs Non-chilled")

mpg %>% 
  filter(cty < 25) %>% 
  ggplot(aes(displ,cty))+
  geom_point(aes(colour = drv,
                 size = trans),
             alpha = 0.5
  )+
  geom_smooth(method = lm)+
  facet_wrap(~year,nrow = 1)+
  labs(x = "Engine size",
       y = "MPG in the city",
       title = "Fuel eddiciency")+
  theme_bw()

```

# 2. Scatter plots

<https://www.youtube.com/watch?v=Dh7P5ExsYCg&list=PLtL57Fdbwb_C6RS0JtBojTNOMVlgpeJkS&index=2>

```{r}
mpg %>% 
  filter(hwy < 35) %>% 
  ggplot(aes(x = displ,
             y = hwy)) +
  geom_point(aes(colour = drv)) +
  geom_smooth(method = lm,
              se = F) +
  labs(x = "Engine size",
       y = "MPG on the Highway",
       title = "Fuel efficiency") +
  theme_minimal()

```

<https://www.youtube.com/watch?v=_tqtIGKXqhA&list=PLtL57Fdbwb_C6RS0JtBojTNOMVlgpeJkS&index=4>

```{r}
msleep %>% 
  filter(bodywt<2) %>% 
  ggplot(aes(bodywt, brainwt))+
  geom_point(aes(color = sleep_total,
                 size = awake))+
  geom_smooth(method = lm,
              se = F)+
  labs(x = "Body Weight",
       y = "Brain Weight",
       title = "Brain and body weight")+
  theme_minimal()

```

# 3. Bar charts and histograms

<https://www.youtube.com/watch?v=n_ACYLWUmos&list=PLtL57Fdbwb_C6RS0JtBojTNOMVlgpeJkS&index=3>

## Bar charts:

! used with categorical variables

```{r}
msleep %>% 
  drop_na(vore) %>% 
  ggplot(aes(vore)) +
  geom_bar(fill = "#97B3C6")+
  #coord_flip()+
  theme_bw()+
  labs(x = "Vore",
       y = NULL,
       title = "Number of observations per order")

# ggplot(aes(fct_infreq(vore)))
```

`fct_infreq` would order the columns gradually

`coord_flip` is better to use when we have a lot of categories

```{r}
starwars %>% 
  filter(hair_color %in% c("black", "brown")) %>%
  drop_na(sex) %>% 
  ggplot(aes(hair_color, fill = sex)) +
  geom_bar(position = "dodge", # position dodge puts bars next to each other
           alpha = 0.5) +
  theme_bw() +
  labs(title = "Gender and Hair Colour",
       x = "Hair Colour",
       y = "Number") +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())

```


## Histograms:

-   used with numeric variables

```{r}

msleep %>%
  ggplot(aes(awake))+
  geom_histogram(binwidth = 2, fill = "#972851")+
  theme_minimal() +
  labs(x = "Total sleep",
       y = NULL,
       title = "Histogram of total sleep")

```
```{r}
msleep %>% 
  drop_na(vore) %>% 
  ggplot(aes(sleep_total))+
  geom_histogram()+
  facet_wrap(~vore)+
  theme_bw()
```

# 3. Line graphs

<https://www.youtube.com/watch?v=UhQyzOwQmOI&list=PLtL57Fdbwb_C6RS0JtBojTNOMVlgpeJkS&index=5>

```{r}
Orange %>% 
  filter(Tree != "1" & Tree != "2") %>%
  ggplot(aes(age, circumference, color = Tree)) +
  geom_line(size = 1) +
  geom_point(size = 5, alpha = 0.3) +
  theme_minimal() +
  labs(title = "Tree age and circumference")
```
```{r}
msleep %>% 
  drop_na(vore) %>% 
  ggplot(aes(sleep_total))+
  geom_density()+
  facet_wrap(~vore)+
  theme_minimal()
```


```{r}
msleep %>% 
  drop_na(vore) %>% 
  # filter(vore == "herbi" | vore == "omni") %>% 
  filter(vore %in% c("herbi", "omni")) %>% 
  ggplot(aes(sleep_total, fill = vore)) +
  geom_density(color = "gray", alpha = 0.3) +
  theme_bw()
```


# 4. Boxplot

```{r}

msleep %>% 
  drop_na(vore) %>%
  ggplot(aes(vore, sleep_total)) +
  geom_boxplot() +
  coord_flip() +
  theme_bw()

```

* better to use `coord_flip()` when we have categorical var on x axe, in order for the titles to be better readable


